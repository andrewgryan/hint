@import "./gray.min.css";
@import "./lime.min.css";
@import "./sizes.min.css";
@import "./borders.min.css";

@layer global, page, component;

@layer component {
    .leaflet-container {
        background-color: var(--bg) !important;
    }
    .leaflet-control-zoom,
    .leaflet-control-zoom-in,
    .leaflet-control-zoom-out {
        color: var(--gray-1) !important;
        background-color: var(--surface) !important;
    }
}

@layer global {
    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    * {
        margin: 0;
    }

    :root {
        --bg: var(--gray-10);
        --surface: var(--gray-8);
        --border: var(--gray-7);
        --submit: var(--lime-6);
    }
}

@layer page {
    .Route {
        margin-inline: 0;

        table {
            border-spacing: 0;
        }
        tr:has(td) {
            background-color: var(--surface);
            border: var(--border-size-1) solid
                var(--border);
        }
        th {
            text-align: left;
            position: sticky;
            left: 0;
        }
        td,
        th {
            padding-inline: var(--size-2);
            padding-block: var(--size-2);
        }
    }
}

@layer page {
    .New {
        margin-block: var(--size-5);
        display: grid;
        gap: var(--size-8);
        h1 {
            position: sticky;
            top: 0;
            background-color: var(--bg);
            padding-block: var(--size-2);
        }
        button {
            background-color: var(--submit);
            color: var(--bg);
            padding-block: var(--size-4);
        }
        section {
            display: grid;
            gap: var(--size-2);
            color: var(--gray-1);
        }
        label {
            display: block;
            color: var(--gray-5);
            margin-block-end: var(--size-1);
        }
        input,
        select {
            background-color: inherit;
            color: inherit;
            font: inherit;
            width: 100%;
        }
        button,
        select,
        input {
            padding-block: var(--size-2);
            padding-inline: var(--size-1);
        }

        input,
        select {
            background-color: var(--surface);
            border: var(--border-size-1) solid
                var(--border);
        }
    }
}

@layer global {
    h1 {
        color: var(--lime-6);
    }

    body {
        background-color: var(--bg);
        color: var(--gray-6);
        font-family: system-ui;
        min-height: 100vh;
        margin: 0;
    }

    button {
        background-color: var(--gray-9);
        border: none;
        color: inherit;
        font: inherit;
    }

    main {
        margin-inline: var(--size-2);
    }
}

#control {
    margin: 0.25rem;
}

.sticky {
    position: sticky;
}
.left-0 {
    left: 0;
}
.inline-block {
    display: inline-block;
}
.block {
    display: block;
}
.overflow-x-scroll {
    overflow-x: scroll;
}

.w-full {
    width: 100vw;
}

.grid {
    display: grid;
}
.col-2 {
    grid-template-columns: 1fr 1fr;
}
.gap-2 {
    gap: var(--size-2);
}

.h-40 {
    height: 40ch;
}

.index {
    height: 90vh;
    display: grid;
    gap: var(--size-2);
    grid-template-rows: auto 1fr 1fr;
}
